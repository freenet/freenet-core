name: CI

on:
  push:
    branches: [main]
  pull_request:
  merge_group:

jobs:
  test_all:
    name: Test

    runs-on: freenet-default-runner

    env:
      FREENET_LOG: error
      CARGO_TARGET_DIR: ${{ github.workspace }}/target

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v2
        if: success() || steps.test.conclusion == 'failure'
        with:
          shared-key: "rust-cache"
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Build
        run: |
          cargo build --locked
          export PATH="$PWD/target/debug:$PATH"
          make -C apps/freenet-ping -f run-ping.mk build

      - name: Test - legacy mode
        run: cargo test --workspace --no-default-features --features trace,websocket,redb

      - name: Test - actor mode
        run: FREENET_ACTOR_CLIENTS=true cargo test --workspace --no-default-features --features trace,websocket,redb

  clippy_check:
    name: Clippy

    runs-on: freenet-default-runner

    env:
      FREENET_LOG: error
      CARGO_TARGET_DIR: ${{ github.workspace }}/target

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy
          targets: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache"
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Build
        run: |
          cargo build --locked --bin fdev --manifest-path ../../crates/fdev/Cargo.toml
          export PATH="$PWD/../../target/debug:$PATH"
          make -f run-ping.mk build
        working-directory: apps/freenet-ping

      - name: clippy
        run: cargo clippy -- -D warnings

  fmt_check:
    name: Fmt

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt

      - name: Check code formatting
        run: cargo fmt -- --check

  claude-ci-analysis:
    name: Claude CI Analysis

    runs-on: ubuntu-latest
    needs: [test_all, clippy_check, fmt_check]
    if: failure() && contains(github.event.pull_request.labels.*.name, 'claude-debug')

    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude CI Analysis
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            REPO: ${{ github.repository }}
            PR NUMBER: ${{ github.event.pull_request.number }}

            The CI workflow has failed. Please analyze the failure and provide:
            1. Root cause of the failure
            2. Specific steps to fix the issue
            3. Whether this appears to be a flaky test or genuine bug
            4. Any relevant context from the codebase

            Use the repository's CLAUDE.md for guidance on testing and debugging.

            After your analysis, use `gh pr comment` with your Bash tool to post your findings as a comment on the PR.

          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr view:*),Bash(gh pr list:*),Bash(gh api:*),Bash(gh run view:*)"'
