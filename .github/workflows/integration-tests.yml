name: Subscription Integration Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  RUST_LOG: debug
  RUST_BACKTRACE: 1
  FREENET_TEST_TIMEOUT: 120

jobs:
  subscription-integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Install riverctl (optional)
      continue-on-error: true
      run: |
        cargo install riverctl --force || echo "riverctl installation failed, continuing without it"

    - name: Build test contracts
      run: |
        cd tests/test-contract-1
        cargo build --target wasm32-unknown-unknown --release
        cd ../..

    - name: Run subscription routing test
      run: |
        cargo test --test subscription_integration test_subscription_response_routing \
          --features integration-tests -- --nocapture

    - name: Run optimal location subscription test
      run: |
        cargo test --test subscription_integration test_optimal_location_subscription \
          --features integration-tests -- --nocapture

    - name: Run multiple peer candidates test
      run: |
        cargo test --test subscription_integration test_multiple_peer_candidates \
          --features integration-tests -- --nocapture

    - name: Run comprehensive subscription test
      run: |
        cargo test --test subscription_integration test_subscription_fixes_comprehensive \
          --features integration-tests -- --nocapture

    - name: Run riverctl integration test (if available)
      continue-on-error: true
      run: |
        if command -v riverctl &> /dev/null; then
          cargo test --test subscription_integration test_riverctl_subscription_flow \
            --features integration-tests -- --nocapture --ignored
        else
          echo "Skipping riverctl test - not installed"
        fi

    - name: Generate test report
      if: always()
      run: |
        mkdir -p test-reports
        cargo run --bin generate-test-report || echo "Report generation not available"

    - name: Upload test logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-logs-${{ github.run_id }}
        path: |
          target/test-logs/
          test-reports/

    - name: Upload coverage
      if: success()
      uses: codecov/codecov-action@v3
      with:
        files: ./target/coverage/lcov.info
        fail_ci_if_error: false

  quick-validation:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build
      run: cargo build --release

    - name: Run unit tests
      run: cargo test --lib --bins