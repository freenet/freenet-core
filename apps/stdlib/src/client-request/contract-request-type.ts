// automatically generated by the FlatBuffers compiler, do not modify

import { Get, GetT } from '../client-request/get.js';
import { Put, PutT } from '../client-request/put.js';
import { Subscribe, SubscribeT } from '../client-request/subscribe.js';
import { Update, UpdateT } from '../client-request/update.js';


export enum ContractRequestType {
  NONE = 0,
  Put = 1,
  Update = 2,
  Get = 3,
  Subscribe = 4
}

export function unionToContractRequestType(
  type: ContractRequestType,
  accessor: (obj:Get|Put|Subscribe|Update) => Get|Put|Subscribe|Update|null
): Get|Put|Subscribe|Update|null {
  switch(ContractRequestType[type]) {
    case 'NONE': return null; 
    case 'Put': return accessor(new Put())! as Put;
    case 'Update': return accessor(new Update())! as Update;
    case 'Get': return accessor(new Get())! as Get;
    case 'Subscribe': return accessor(new Subscribe())! as Subscribe;
    default: return null;
  }
}

export function unionListToContractRequestType(
  type: ContractRequestType, 
  accessor: (index: number, obj:Get|Put|Subscribe|Update) => Get|Put|Subscribe|Update|null, 
  index: number
): Get|Put|Subscribe|Update|null {
  switch(ContractRequestType[type]) {
    case 'NONE': return null; 
    case 'Put': return accessor(index, new Put())! as Put;
    case 'Update': return accessor(index, new Update())! as Update;
    case 'Get': return accessor(index, new Get())! as Get;
    case 'Subscribe': return accessor(index, new Subscribe())! as Subscribe;
    default: return null;
  }
}
