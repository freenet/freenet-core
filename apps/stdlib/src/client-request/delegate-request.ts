// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ApplicationMessages, ApplicationMessagesT } from '../client-request/application-messages.js';
import { DelegateRequestType, unionToDelegateRequestType, unionListToDelegateRequestType } from '../client-request/delegate-request-type.js';
import { GetSecretRequestType, GetSecretRequestTypeT } from '../client-request/get-secret-request-type.js';
import { RegisterDelegate, RegisterDelegateT } from '../client-request/register-delegate.js';
import { UnregisterDelegate, UnregisterDelegateT } from '../client-request/unregister-delegate.js';


export class DelegateRequest implements flatbuffers.IUnpackableObject<DelegateRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DelegateRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDelegateRequest(bb:flatbuffers.ByteBuffer, obj?:DelegateRequest):DelegateRequest {
  return (obj || new DelegateRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDelegateRequest(bb:flatbuffers.ByteBuffer, obj?:DelegateRequest):DelegateRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DelegateRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

delegateRequestType():DelegateRequestType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : DelegateRequestType.NONE;
}

delegateRequest<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startDelegateRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addDelegateRequestType(builder:flatbuffers.Builder, delegateRequestType:DelegateRequestType) {
  builder.addFieldInt8(0, delegateRequestType, DelegateRequestType.NONE);
}

static addDelegateRequest(builder:flatbuffers.Builder, delegateRequestOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, delegateRequestOffset, 0);
}

static endDelegateRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 6) // delegate_request
  return offset;
}

static createDelegateRequest(builder:flatbuffers.Builder, delegateRequestType:DelegateRequestType, delegateRequestOffset:flatbuffers.Offset):flatbuffers.Offset {
  DelegateRequest.startDelegateRequest(builder);
  DelegateRequest.addDelegateRequestType(builder, delegateRequestType);
  DelegateRequest.addDelegateRequest(builder, delegateRequestOffset);
  return DelegateRequest.endDelegateRequest(builder);
}

unpack(): DelegateRequestT {
  return new DelegateRequestT(
    this.delegateRequestType(),
    (() => {
      const temp = unionToDelegateRequestType(this.delegateRequestType(), this.delegateRequest.bind(this));
      if(temp === null) { return null; }
      return temp.unpack()
  })()
  );
}


unpackTo(_o: DelegateRequestT): void {
  _o.delegateRequestType = this.delegateRequestType();
  _o.delegateRequest = (() => {
      const temp = unionToDelegateRequestType(this.delegateRequestType(), this.delegateRequest.bind(this));
      if(temp === null) { return null; }
      return temp.unpack()
  })();
}
}

export class DelegateRequestT implements flatbuffers.IGeneratedObject {
constructor(
  public delegateRequestType: DelegateRequestType = DelegateRequestType.NONE,
  public delegateRequest: ApplicationMessagesT|GetSecretRequestTypeT|RegisterDelegateT|UnregisterDelegateT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const delegateRequest = builder.createObjectOffset(this.delegateRequest);

  return DelegateRequest.createDelegateRequest(builder,
    this.delegateRequestType,
    delegateRequest
  );
}
}
