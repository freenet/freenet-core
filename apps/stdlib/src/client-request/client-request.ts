// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Authenticate, AuthenticateT } from '../client-request/authenticate.js';
import { ClientRequestType, unionToClientRequestType, unionListToClientRequestType } from '../client-request/client-request-type.js';
import { ContractRequest, ContractRequestT } from '../client-request/contract-request.js';
import { DelegateRequest, DelegateRequestT } from '../client-request/delegate-request.js';
import { Disconnect, DisconnectT } from '../client-request/disconnect.js';


export class ClientRequest implements flatbuffers.IUnpackableObject<ClientRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ClientRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsClientRequest(bb:flatbuffers.ByteBuffer, obj?:ClientRequest):ClientRequest {
  return (obj || new ClientRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsClientRequest(bb:flatbuffers.ByteBuffer, obj?:ClientRequest):ClientRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ClientRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

clientRequestType():ClientRequestType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ClientRequestType.NONE;
}

clientRequest<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startClientRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addClientRequestType(builder:flatbuffers.Builder, clientRequestType:ClientRequestType) {
  builder.addFieldInt8(0, clientRequestType, ClientRequestType.NONE);
}

static addClientRequest(builder:flatbuffers.Builder, clientRequestOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, clientRequestOffset, 0);
}

static endClientRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 6) // client_request
  return offset;
}

static finishClientRequestBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedClientRequestBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createClientRequest(builder:flatbuffers.Builder, clientRequestType:ClientRequestType, clientRequestOffset:flatbuffers.Offset):flatbuffers.Offset {
  ClientRequest.startClientRequest(builder);
  ClientRequest.addClientRequestType(builder, clientRequestType);
  ClientRequest.addClientRequest(builder, clientRequestOffset);
  return ClientRequest.endClientRequest(builder);
}

unpack(): ClientRequestT {
  return new ClientRequestT(
    this.clientRequestType(),
    (() => {
      const temp = unionToClientRequestType(this.clientRequestType(), this.clientRequest.bind(this));
      if(temp === null) { return null; }
      return temp.unpack()
  })()
  );
}


unpackTo(_o: ClientRequestT): void {
  _o.clientRequestType = this.clientRequestType();
  _o.clientRequest = (() => {
      const temp = unionToClientRequestType(this.clientRequestType(), this.clientRequest.bind(this));
      if(temp === null) { return null; }
      return temp.unpack()
  })();
}
}

export class ClientRequestT implements flatbuffers.IGeneratedObject {
constructor(
  public clientRequestType: ClientRequestType = ClientRequestType.NONE,
  public clientRequest: AuthenticateT|ContractRequestT|DelegateRequestT|DisconnectT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const clientRequest = builder.createObjectOffset(this.clientRequest);

  return ClientRequest.createClientRequest(builder,
    this.clientRequestType,
    clientRequest
  );
}
}
