// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { ContractRequest, ContractRequestT } from '../client-request/contract-request.js';
import { DelegateRequest, DelegateRequestT } from '../client-request/delegate-request.js';
import { Disconnect, DisconnectT } from '../client-request/disconnect.js';
import { GenerateRandData, GenerateRandDataT } from '../client-request/generate-rand-data.js';


export enum ClientRequestType {
  NONE = 0,
  ContractRequest = 1,
  DelegateRequest = 2,
  GenerateRandData = 3,
  Disconnect = 4
}

export function unionToClientRequestType(
  type: ClientRequestType,
  accessor: (obj:ContractRequest|DelegateRequest|Disconnect|GenerateRandData) => ContractRequest|DelegateRequest|Disconnect|GenerateRandData|null
): ContractRequest|DelegateRequest|Disconnect|GenerateRandData|null {
  switch(ClientRequestType[type]) {
    case 'NONE': return null; 
    case 'ContractRequest': return accessor(new ContractRequest())! as ContractRequest;
    case 'DelegateRequest': return accessor(new DelegateRequest())! as DelegateRequest;
    case 'GenerateRandData': return accessor(new GenerateRandData())! as GenerateRandData;
    case 'Disconnect': return accessor(new Disconnect())! as Disconnect;
    default: return null;
  }
}

export function unionListToClientRequestType(
  type: ClientRequestType, 
  accessor: (index: number, obj:ContractRequest|DelegateRequest|Disconnect|GenerateRandData) => ContractRequest|DelegateRequest|Disconnect|GenerateRandData|null, 
  index: number
): ContractRequest|DelegateRequest|Disconnect|GenerateRandData|null {
  switch(ClientRequestType[type]) {
    case 'NONE': return null; 
    case 'ContractRequest': return accessor(index, new ContractRequest())! as ContractRequest;
    case 'DelegateRequest': return accessor(index, new DelegateRequest())! as DelegateRequest;
    case 'GenerateRandData': return accessor(index, new GenerateRandData())! as GenerateRandData;
    case 'Disconnect': return accessor(index, new Disconnect())! as Disconnect;
    default: return null;
  }
}
