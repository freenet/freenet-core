// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { DelegateKey, DelegateKeyT } from '../host-response/delegate-key.js';
import { OutboundDelegateMsg, OutboundDelegateMsgT } from '../host-response/outbound-delegate-msg.js';


export class DelegateResponse implements flatbuffers.IUnpackableObject<DelegateResponseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DelegateResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDelegateResponse(bb:flatbuffers.ByteBuffer, obj?:DelegateResponse):DelegateResponse {
  return (obj || new DelegateResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDelegateResponse(bb:flatbuffers.ByteBuffer, obj?:DelegateResponse):DelegateResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DelegateResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

key(obj?:DelegateKey):DelegateKey|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new DelegateKey()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

values(index: number, obj?:OutboundDelegateMsg):OutboundDelegateMsg|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new OutboundDelegateMsg()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

valuesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startDelegateResponse(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, keyOffset, 0);
}

static addValues(builder:flatbuffers.Builder, valuesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, valuesOffset, 0);
}

static createValuesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startValuesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endDelegateResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // key
  builder.requiredField(offset, 6) // values
  return offset;
}

static createDelegateResponse(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset, valuesOffset:flatbuffers.Offset):flatbuffers.Offset {
  DelegateResponse.startDelegateResponse(builder);
  DelegateResponse.addKey(builder, keyOffset);
  DelegateResponse.addValues(builder, valuesOffset);
  return DelegateResponse.endDelegateResponse(builder);
}

unpack(): DelegateResponseT {
  return new DelegateResponseT(
    (this.key() !== null ? this.key()!.unpack() : null),
    this.bb!.createObjList<OutboundDelegateMsg, OutboundDelegateMsgT>(this.values.bind(this), this.valuesLength())
  );
}


unpackTo(_o: DelegateResponseT): void {
  _o.key = (this.key() !== null ? this.key()!.unpack() : null);
  _o.values = this.bb!.createObjList<OutboundDelegateMsg, OutboundDelegateMsgT>(this.values.bind(this), this.valuesLength());
}
}

export class DelegateResponseT implements flatbuffers.IGeneratedObject {
constructor(
  public key: DelegateKeyT|null = null,
  public values: (OutboundDelegateMsgT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const key = (this.key !== null ? this.key!.pack(builder) : 0);
  const values = DelegateResponse.createValuesVector(builder, builder.createObjectOffsetList(this.values));

  return DelegateResponse.createDelegateResponse(builder,
    key,
    values
  );
}
}
