// automatically generated by the FlatBuffers compiler, do not modify

import { Error } from '../topology/error.js';
import { Ok } from '../topology/ok.js';


export enum Response {
  NONE = 0,
  Error = 1,
  Ok = 2
}

export function unionToResponse(
  type: Response,
  accessor: (obj:Error|Ok) => Error|Ok|null
): Error|Ok|null {
  switch(Response[type]) {
    case 'NONE': return null; 
    case 'Error': return accessor(new Error())! as Error;
    case 'Ok': return accessor(new Ok())! as Ok;
    default: return null;
  }
}

export function unionListToResponse(
  type: Response, 
  accessor: (index: number, obj:Error|Ok) => Error|Ok|null, 
  index: number
): Error|Ok|null {
  switch(Response[type]) {
    case 'NONE': return null; 
    case 'Error': return accessor(index, new Error())! as Error;
    case 'Ok': return accessor(index, new Ok())! as Ok;
    default: return null;
  }
}
