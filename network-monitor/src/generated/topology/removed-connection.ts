// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from "flatbuffers";

export class RemovedConnection
  implements flatbuffers.IUnpackableObject<RemovedConnectionT>
{
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): RemovedConnection {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsRemovedConnection(
    bb: flatbuffers.ByteBuffer,
    obj?: RemovedConnection
  ): RemovedConnection {
    return (obj || new RemovedConnection()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  static getSizePrefixedRootAsRemovedConnection(
    bb: flatbuffers.ByteBuffer,
    obj?: RemovedConnection
  ): RemovedConnection {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new RemovedConnection()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  at(): string | null;
  at(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  at(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  from(): string | null;
  from(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  from(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  static startRemovedConnection(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  static addAt(builder: flatbuffers.Builder, atOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, atOffset, 0);
  }

  static addFrom(builder: flatbuffers.Builder, fromOffset: flatbuffers.Offset) {
    builder.addFieldOffset(1, fromOffset, 0);
  }

  static endRemovedConnection(
    builder: flatbuffers.Builder
  ): flatbuffers.Offset {
    const offset = builder.endObject();
    builder.requiredField(offset, 4); // at
    builder.requiredField(offset, 6); // from
    return offset;
  }

  static createRemovedConnection(
    builder: flatbuffers.Builder,
    atOffset: flatbuffers.Offset,
    fromOffset: flatbuffers.Offset
  ): flatbuffers.Offset {
    RemovedConnection.startRemovedConnection(builder);
    RemovedConnection.addAt(builder, atOffset);
    RemovedConnection.addFrom(builder, fromOffset);
    return RemovedConnection.endRemovedConnection(builder);
  }

  unpack(): RemovedConnectionT {
    return new RemovedConnectionT(this.at(), this.from());
  }

  unpackTo(_o: RemovedConnectionT): void {
    _o.at = this.at();
    _o.from = this.from();
  }
}

export class RemovedConnectionT implements flatbuffers.IGeneratedObject {
  constructor(
    public at: string | Uint8Array | null = null,
    public from: string | Uint8Array | null = null
  ) {}

  pack(builder: flatbuffers.Builder): flatbuffers.Offset {
    const at = this.at !== null ? builder.createString(this.at!) : 0;
    const from = this.from !== null ? builder.createString(this.from!) : 0;

    return RemovedConnection.createRemovedConnection(builder, at, from);
  }
}
